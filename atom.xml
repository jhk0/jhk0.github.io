<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jhko&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.jhko.me/"/>
  <updated>2017-07-20T18:32:12.000Z</updated>
  <id>http://blog.jhko.me/</id>
  
  <author>
    <name>Jihoon Ko</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>자바스크립트 기초</title>
    <link href="http://blog.jhko.me/2017/07/17/javascript-basics/"/>
    <id>http://blog.jhko.me/2017/07/17/javascript-basics/</id>
    <published>2017-07-17T10:48:58.000Z</published>
    <updated>2017-07-20T18:32:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Javascript-Basics"><a href="#Javascript-Basics" class="headerlink" title="Javascript Basics"></a>Javascript Basics</h1><h2 id="Primitive-data-types"><a href="#Primitive-data-types" class="headerlink" title="Primitive data types"></a>Primitive data types</h2><h3 id="Numbers"><a href="#Numbers" class="headerlink" title="Numbers"></a>Numbers</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number">5</span></div><div class="line"><span class="number">-1</span></div><div class="line"><span class="number">12.1</span></div><div class="line"></div><div class="line"><span class="number">3</span>+<span class="number">10</span>  <span class="comment">// 13</span></div><div class="line"><span class="number">1</span>/<span class="number">10</span>  <span class="comment">// 0.1</span></div><div class="line"><span class="number">10</span>%<span class="number">3</span>  <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">"Hello World"</span></div><div class="line"><span class="string">'Hello World'</span></div><div class="line"></div><div class="line"><span class="string">"abc"</span>+<span class="string">"def"</span>           <span class="comment">// abcdef</span></div><div class="line"><span class="string">"This is \"a dog\""</span>   <span class="comment">// This is "a dog"</span></div><div class="line"><span class="string">"Hello World"</span>.length  <span class="comment">// 11</span></div><div class="line"><span class="string">"hello"</span>[<span class="number">0</span>]            <span class="comment">// h</span></div><div class="line"><span class="string">"hi\\"</span>.length         <span class="comment">// 3</span></div></pre></td></tr></table></figure>
<h3 id="Booleans"><a href="#Booleans" class="headerlink" title="Booleans"></a>Booleans</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">false</span></div></pre></td></tr></table></figure>
<h3 id="Null-and-undefined"><a href="#Null-and-undefined" class="headerlink" title="Null and undefined"></a>Null and undefined</h3><p><strong>Null</strong>: It can be assigned to a variable as a representation of no value. (Object)</p>
<p><strong>Undefined</strong>: A variable has been declared but has not yet been assigned a value. (A Type itself)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// null</span></div><div class="line"><span class="keyword">var</span> player = <span class="string">"Jihoon"</span>;</div><div class="line">player = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="comment">// undefined</span></div><div class="line"><span class="keyword">var</span> name;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://stackoverflow.com/questions/5076944/what-is-the-difference-between-null-and-undefined-in-javascript" target="_blank" rel="external">What is the difference between null and undefined in JavaScript? (StackOverflow)</a></li>
</ul>
<h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"Jihoon"</span>;</div><div class="line"><span class="keyword">var</span> number = <span class="number">111</span>;</div><div class="line"><span class="keyword">var</span> isNumber = <span class="literal">true</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> name = <span class="string">"Jihoon"</span>;</div><div class="line"><span class="string">"Hello "</span> + name       <span class="comment">// Hello Jihoon</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</div><div class="line">num + <span class="number">11</span> + <span class="number">10</span>         <span class="comment">// 121</span></div><div class="line"></div><div class="line"><span class="comment">// Dynamically Typed, and Weakly Typed.</span></div><div class="line"><span class="keyword">var</span> name = <span class="string">"Jihoon"</span>;</div><div class="line">name = <span class="number">50</span>;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://stackoverflow.com/questions/964910/is-javascript-an-untyped-language" target="_blank" rel="external">Is JavaScript an untyped language? (StackOverflow)</a></li>
</ul>
<h2 id="Useful-built-in-methods"><a href="#Useful-built-in-methods" class="headerlink" title="Useful built-in methods"></a>Useful built-in methods</h2><ul>
<li>alert(“Message”);</li>
<li>console.log(“Message”);</li>
<li>prompt(“What is your name?”);<ul>
<li>var userName = prompt(“What is your name?”);</li>
</ul>
</li>
</ul>
<h2 id="Control-Flow"><a href="#Control-Flow" class="headerlink" title="Control Flow"></a>Control Flow</h2><h3 id="Boolean-logic"><a href="#Boolean-logic" class="headerlink" title="Boolean logic"></a>Boolean logic</h3><p>When x = 5,</p>
<table>
<thead>
<tr>
<th>Example</th>
<th>Result</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>x &gt; 10</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>x &gt;= 5</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td>x &lt; -10</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td>x == “5”</td>
<td>true</td>
<td>Equal to</td>
</tr>
<tr>
<td>x != “a”</td>
<td>true</td>
<td>Not equal to</td>
</tr>
<tr>
<td>x === “5”</td>
<td>false</td>
<td>Equal value and type</td>
</tr>
<tr>
<td>x !== “5”</td>
<td>true</td>
<td>Not equal value and equal type</td>
</tr>
</tbody>
</table>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</div><div class="line">x == <span class="string">"10"</span>;  <span class="comment">// ture</span></div><div class="line">x === <span class="string">"10"</span>; <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> y = <span class="literal">null</span>;</div><div class="line">y == <span class="literal">undefined</span>  <span class="comment">// true</span></div><div class="line">y === <span class="literal">undefined</span> <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="literal">true</span> == <span class="string">"1"</span>       <span class="comment">// true</span></div><div class="line"><span class="number">0</span> === <span class="literal">false</span>       <span class="comment">// true</span></div><div class="line"><span class="literal">null</span> == <span class="literal">undefined</span> <span class="comment">// true</span></div><div class="line"><span class="literal">NaN</span> == <span class="literal">NaN</span>        <span class="comment">// false (not a number)</span></div></pre></td></tr></table></figure>
<h3 id="Logical-operators"><a href="#Logical-operators" class="headerlink" title="Logical operators"></a>Logical operators</h3><table>
<thead>
<tr>
<th>Operator</th>
<th>Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>&amp;&amp;</td>
<td>AND</td>
</tr>
<tr>
<td>||</td>
<td>OR</td>
</tr>
<tr>
<td>!</td>
<td>NOT</td>
</tr>
</tbody>
</table>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> y = <span class="string">"a"</span>;</div><div class="line"></div><div class="line">y === <span class="string">"b"</span> || x &gt;= <span class="number">10</span>  <span class="comment">// true</span></div><div class="line"></div><div class="line">x = <span class="number">3</span>;</div><div class="line">y = <span class="number">8</span>;</div><div class="line"></div><div class="line">!(x == <span class="string">"3"</span> || x === y) &amp;&amp; !(y != <span class="number">8</span> &amp;&amp; x &lt;= y) <span class="comment">// false</span></div><div class="line"></div><div class="line"></div><div class="line">!<span class="string">"Hello World"</span>  <span class="comment">// false</span></div><div class="line">!!<span class="string">""</span>            <span class="comment">// false</span></div><div class="line">!!<span class="literal">null</span>          <span class="comment">// false</span></div><div class="line">!!<span class="number">0</span>             <span class="comment">// false</span></div><div class="line">!!<span class="literal">NaN</span>           <span class="comment">// false</span></div><div class="line">!!<span class="number">-1</span>            <span class="comment">// true</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line"><span class="keyword">var</span> msg = <span class="string">"hello"</span></div><div class="line"><span class="keyword">var</span> isFunny = <span class="string">"false"</span></div><div class="line"></div><div class="line">!((str || msg  &amp;&amp; isFunny)) <span class="comment">// false</span></div></pre></td></tr></table></figure>
<ul>
<li><a href="https://developer.mozilla.org/ko/docs/Glossary/Truthy" target="_blank" rel="external">Truthy (MDN)</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" target="_blank" rel="external">Falsy (MDN)</a></li>
</ul>
<h3 id="Conditionals"><a href="#Conditionals" class="headerlink" title="Conditionals"></a>Conditionals</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"Sorry, you are not old enough."</span>);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (age &lt; <span class="number">21</span>) &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"You can enter, but cannot drink."</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"Come on in. You can drink."</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> guess = prompt(<span class="string">"Guess a number"</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="built_in">Number</span>(guess) === <span class="number">10</span>) &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"Right!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://www.w3schools.com/jsref/jsref_number.asp" target="_blank" rel="external">JavaScript Number() Function</a></li>
</ul>
<h3 id="Loops"><a href="#Loops" class="headerlink" title="Loops"></a>Loops</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> count = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (count &lt; <span class="number">4</span>) &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"count is: "</span> + count);</div><div class="line">	count++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// count is: 1</span></div><div class="line"><span class="comment">// count is: 2</span></div><div class="line"><span class="comment">// count is: 3</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"count is: "</span> + i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// count is: 1</span></div><div class="line"><span class="comment">// count is: 2</span></div><div class="line"><span class="comment">// count is: 3</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="string">"ahceclwlxo"</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; str.length; i+=<span class="number">2</span>) &#123;</div><div class="line">	<span class="built_in">console</span>.log(str[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// h</span></div><div class="line"><span class="comment">// e</span></div><div class="line"><span class="comment">// l</span></div><div class="line"><span class="comment">// l</span></div><div class="line"><span class="comment">// o</span></div></pre></td></tr></table></figure>
<h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//function declaration</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">capitalize</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> str.charAt(<span class="number">0</span>).toUpperCase() + str.slice(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">capitalize(<span class="string">"paris"</span>);</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// Paris</span></div><div class="line"></div><div class="line"><span class="comment">// function expression</span></div><div class="line"><span class="keyword">var</span> capitalize = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> str.charAt(<span class="number">0</span>).toUpperCase() + str.slice(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">capitalize(<span class="string">"paris"</span>);</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// Paris</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> doStep = <span class="function"><span class="keyword">function</span> <span class="title">nextStep</span>(<span class="params">step</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (step &gt; <span class="number">0</span>) &#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"Step! : "</span> + <span class="keyword">this</span>.name);</div><div class="line">		nextStep.call(<span class="keyword">this</span>, step - <span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> person = &#123;<span class="attr">name</span>: <span class="string">"stranger"</span>, <span class="attr">walk</span>: doStep&#125;;</div><div class="line">person.walk(<span class="number">5</span>);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> unikys = &#123;</div><div class="line">	 <span class="attr">yell</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">		 <span class="built_in">console</span>.log(<span class="string">"YELL!"</span>);</div><div class="line">	 &#125;</div><div class="line"> &#125;;</div><div class="line"> unikys.yell();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> callback = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line"> <span class="built_in">console</span>.log(<span class="string">"Mouse clicked!"</span>);</div><div class="line">&#125;;</div><div class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">"click"</span>, callback);</div><div class="line"></div><div class="line"><span class="keyword">var</span> func = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"return a+b;"</span>);</div><div class="line"><span class="built_in">console</span>.log(func(<span class="number">5</span>, <span class="number">6</span>) === <span class="number">11</span>);</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://unikys.tistory.com/305" target="_blank" rel="external">[속깊은 자바스크립트 강좌] function declaration vs function expression 차이점</a></li>
</ul>
<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doMath</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> x = <span class="number">1</span>;</div><div class="line">	<span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"></div><div class="line">doMath();</div><div class="line"><span class="comment">// Output: 1</span></div><div class="line"><span class="built_in">console</span>.log(x);</div><div class="line"><span class="comment">// Error, x is not defined.</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> y = <span class="number">1</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	y = <span class="number">10</span>;</div><div class="line">	<span class="built_in">console</span>.log(y);</div><div class="line">&#125;</div><div class="line"></div><div class="line">doSomething();</div><div class="line"><span class="comment">// Output: 10</span></div><div class="line"><span class="built_in">console</span>.log(y);</div><div class="line"><span class="comment">// Output: 10;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> phrase = <span class="string">"Hi there!"</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> phrase = <span class="string">"Goodbye!"</span>;</div><div class="line">	<span class="built_in">console</span>.log(phrase);</div><div class="line">&#125;</div><div class="line"></div><div class="line">doSomething();</div><div class="line"><span class="comment">// Output: GoodBye!</span></div><div class="line"><span class="built_in">console</span>.log(phrase);</div><div class="line"><span class="comment">// Output: Hi there!</span></div></pre></td></tr></table></figure>
<h2 id="Higher-order-functions"><a href="#Higher-order-functions" class="headerlink" title="Higher order functions"></a>Higher order functions</h2><p>A higher-order function is a function that can take another function as an argument, or that returns a function as a result.</p>
<ul>
<li>First Class Functions<ul>
<li>Functions in JavaScript are treated as objects.</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Taking Functions as Arguments.</span></div><div class="line"><span class="keyword">var</span> proveIt = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">"you triggered "</span> + <span class="keyword">this</span>.id);</div><div class="line">&#125;;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"clicker"</span>).addEventListener(<span class="string">"click"</span>, proveIt);</div><div class="line"></div><div class="line"><span class="comment">// Returning Functions as Results.</span></div><div class="line"><span class="keyword">var</span> snakify = <span class="function"><span class="keyword">function</span>(<span class="params">text</span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> text.replace(<span class="regexp">/millenials/ig</span>, <span class="string">"Snake People"</span>);</div><div class="line">&#125;;</div><div class="line"><span class="built_in">console</span>.log(snakify(<span class="string">"The Millenials are always up to something."</span>));</div><div class="line"><span class="comment">// Output: The Snake People are always up to something.</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> attitude = <span class="function"><span class="keyword">function</span>(<span class="params">original, replacement, source</span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">source</span>) </span>&#123;</div><div class="line">		<span class="keyword">return</span> source.replace(original, replacement);</div><div class="line">	&#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> snakify = attitude(<span class="regexp">/millenials/ig</span>, <span class="string">"Snake People"</span>);</div><div class="line"><span class="keyword">var</span> hippify = attitude(<span class="regexp">/baby boomers/ig</span>, <span class="string">"Aging Hippies"</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(snakify(<span class="string">"The Millenials are always up to something."</span>));</div><div class="line"><span class="comment">// Output: The Snake People are always up to something.</span></div><div class="line"><span class="built_in">console</span>.log(hippify(<span class="string">"The Baby Boomers just look the other way."</span>));</div><div class="line"><span class="comment">// Output: The Aging Hippies just look the other way.</span></div></pre></td></tr></table></figure>
<ul>
<li><a href="https://www.sitepoint.com/higher-order-functions-javascript/" target="_blank" rel="external">Higher-Order Functions in JavaScript</a></li>
</ul>
<h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> friends = [<span class="string">"Charlie"</span>, <span class="string">"Liz"</span>, <span class="string">"David"</span>, <span class="string">"Mattias"</span>];</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(friends[<span class="number">0</span>]);</div><div class="line"><span class="comment">// Output: Charlie</span></div><div class="line"></div><div class="line">friends[<span class="number">0</span>] = <span class="string">"Amelie"</span>;  <span class="comment">// Edit data</span></div><div class="line">friends[<span class="number">4</span>] = <span class="string">"Andrea"</span>   <span class="comment">// Add data</span></div><div class="line"></div><div class="line"><span class="comment">// Initialize an empty array</span></div><div class="line"><span class="keyword">var</span> friends = [];</div><div class="line"><span class="keyword">var</span> friends = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line"></div><div class="line"><span class="keyword">var</span> random_collection = [<span class="number">4</span>, <span class="literal">true</span>, <span class="string">"abc"</span>, <span class="literal">null</span>];</div><div class="line"><span class="built_in">console</span>.log(random_collection.length);</div><div class="line"><span class="comment">// Output: 4</span></div></pre></td></tr></table></figure>
<h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> colors = [<span class="string">"red"</span>, <span class="string">"orange"</span>, <span class="string">"yellow"</span>];</div><div class="line"></div><div class="line">colors.push(<span class="string">"green"</span>);     <span class="comment">// ["red", "orange", "yellow", "green"]</span></div><div class="line"><span class="keyword">var</span> color = colors.pop(); <span class="comment">// ["red", "orange", "yellow"]</span></div><div class="line"><span class="built_in">console</span>.log(color);</div><div class="line"><span class="comment">// Output: Green</span></div><div class="line"></div><div class="line">colors.unshift(<span class="string">"blue"</span>); <span class="comment">// ["blue", "red", "orange", "yellow"]</span></div><div class="line">colors.shift();         <span class="comment">// ["red", "orange", "yellow"]</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> index = colors.indexOf(<span class="string">"red"</span>);</div><div class="line"><span class="built_in">console</span>.log(index);</div><div class="line"><span class="comment">// Output: 0</span></div><div class="line"><span class="built_in">console</span>.log(colors.indexOf(<span class="string">"black"</span>))</div><div class="line"><span class="comment">// Output: -1</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> carColors = colors.slice(<span class="number">0</span>, <span class="number">2</span>);</div><div class="line"><span class="built_in">console</span>.log(carColors);</div><div class="line"><span class="comment">// Output: ["red", "orange"]</span></div><div class="line"><span class="built_in">console</span>.log(colors);</div><div class="line"><span class="comment">// Output: ["red", "orange", "yellow"]</span></div></pre></td></tr></table></figure>
<h3 id="Iteration"><a href="#Iteration" class="headerlink" title="Iteration"></a>Iteration</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> colors = [<span class="string">"red"</span>, <span class="string">"orange"</span>, <span class="string">"yellow"</span>];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; colors.length; i++) &#123;</div><div class="line">	<span class="built_in">console</span>.log(colors[i]);</div><div class="line">&#125;</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// red</span></div><div class="line"><span class="comment">// orange</span></div><div class="line"><span class="comment">// yellow</span></div><div class="line"></div><div class="line">colors.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">color</span>)) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(color);</div><div class="line">&#125;</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// red</span></div><div class="line"><span class="comment">// orange</span></div><div class="line"><span class="comment">// yellow</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">printColor</span>(<span class="params">color</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(color);</div><div class="line">&#125;</div><div class="line">colors.forEach(printColor);</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// red</span></div><div class="line"><span class="comment">// orange</span></div><div class="line"><span class="comment">// yellow</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (count &lt; colors.length) &#123;</div><div class="line">	<span class="built_in">console</span>.log(colors[count]);</div><div class="line">	count++;</div><div class="line">&#125;</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// red</span></div><div class="line"><span class="comment">// orange</span></div><div class="line"><span class="comment">// yellow</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">Array</span>.prototype.myForEach = <span class="function"><span class="keyword">function</span>(<span class="params">func</span>) </span>&#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</div><div class="line">		func(<span class="keyword">this</span>[i]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">colors.myForEach(<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(name);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// red</span></div><div class="line"><span class="comment">// orange</span></div><div class="line"><span class="comment">// yellow</span></div></pre></td></tr></table></figure>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="external">Array.prototype.forEach() (MDN)</a></li>
</ul>
<h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Array</span></div><div class="line"><span class="keyword">var</span> person = [<span class="string">"Cindy"</span>, <span class="number">32</span>, <span class="string">"Missoula"</span>];</div><div class="line"></div><div class="line"><span class="comment">// Object: store data in key-value pairs.</span></div><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">	<span class="attr">name</span>: <span class="string">"Cindy"</span>,</div><div class="line">	<span class="attr">age</span>: <span class="number">32</span>,</div><div class="line">	<span class="attr">city</span>: <span class="string">"Missoula"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(persion[<span class="string">"name"</span>]); <span class="comment">// Output: Cindy</span></div><div class="line"><span class="built_in">console</span>.log(person.name);     <span class="comment">// Output: Cindy</span></div><div class="line"></div><div class="line">person[<span class="string">"age"</span>] += <span class="number">1</span>;</div><div class="line">person.city = <span class="string">"London"</span>;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Create objects</span></div><div class="line"><span class="keyword">var</span> person = &#123;&#125;;</div><div class="line">person.name = <span class="string">"Travis"</span>;</div><div class="line">person.age = <span class="number">20</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">	<span class="attr">name</span>: <span class="string">"Travis"</span>,</div><div class="line">	<span class="attr">age</span>: <span class="number">20</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">person.name = <span class="string">"Travis"</span>;</div><div class="line">person.age = <span class="number">20</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> junkObject = &#123;</div><div class="line">	<span class="attr">age</span>: <span class="number">20</span>,</div><div class="line">	<span class="attr">color</span>: <span class="string">"blue"</span>,</div><div class="line">	<span class="attr">friends</span>: [<span class="string">"Travis"</span>, <span class="string">"Cindy"</span>],</div><div class="line">	<span class="attr">pet</span>: &#123;</div><div class="line">		<span class="attr">species</span>: <span class="string">"Dog"</span>,</div><div class="line">		<span class="attr">age</span>: <span class="number">2</span></div><div class="line">	&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">someObject<span class="number">.1</span>blah    <span class="comment">// Invalid: can't start with number.</span></div><div class="line">someObject[<span class="string">"1blah"</span>] <span class="comment">// Valid</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="string">"name"</span>;</div><div class="line">someObject.str  <span class="comment">// Invalid</span></div><div class="line">someObject[str] <span class="comment">// Valid</span></div><div class="line"></div><div class="line">someObject.fav color    <span class="comment">//Invalid</span></div><div class="line">someObject[<span class="string">"fav color"</span>] <span class="comment">// Valid</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Object with method</span></div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">	<span class="attr">name</span>: <span class="string">"Chunk"</span>,</div><div class="line">	<span class="attr">age</span>: <span class="number">45</span>,</div><div class="line">	<span class="attr">isCool</span>: <span class="literal">false</span>,</div><div class="line">	<span class="attr">friends</span>: [<span class="string">"bob"</span>, <span class="string">"tina"</span>],</div><div class="line">	<span class="attr">add</span>: <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</div><div class="line">		<span class="keyword">return</span> x+y;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Like namespace</span></div><div class="line"><span class="keyword">var</span> dog = &#123;</div><div class="line">	<span class="attr">speak</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"WOOF!"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> cat = &#123;</div><div class="line">	<span class="attr">speak</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"MEOW!"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">dog.speak();  <span class="comment">// Output: WOOF!</span></div><div class="line">cat.speak();  <span class="comment">// Output: MEOW!</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// This</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> comments = &#123;&#125;;</div><div class="line"></div><div class="line">comments.data = [<span class="string">"Good Job!"</span>, <span class="string">"Bye"</span>, <span class="string">"Hey"</span>];</div><div class="line"></div><div class="line">comments.print = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">this</span>.data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(el);</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">comments.print();</div><div class="line"><span class="comment">// Output</span></div><div class="line"><span class="comment">// Good Job!</span></div><div class="line"><span class="comment">// Bye</span></div><div class="line"><span class="comment">// Hey</span></div></pre></td></tr></table></figure>
<h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><ul>
<li>Document Object Model<ul>
<li>The interface between Javascript and HTML+CSS</li>
<li>The browser turns every HTML tags into a Javascript object.</li>
</ul>
</li>
</ul>
<h3 id="Selectors"><a href="#Selectors" class="headerlink" title="Selectors"></a>Selectors</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>Goodbye<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"highlight"</span>&gt;</span>List Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bolded"</span>&gt;</span>List Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bolded"</span>&gt;</span>List Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tag = <span class="built_in">document</span>.getElementById(<span class="string">"highlight"</span>);</div><div class="line"><span class="built_in">console</span>.log(tag); <span class="comment">// Output: &lt;li id="highlight"&gt;List Item 1&lt;/li&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> tags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"bolded"</span>);</div><div class="line"><span class="built_in">console</span>.log(tags[<span class="number">0</span>]);  <span class="comment">// Output: &lt;li class="bolded"&gt;List Item 2&lt;/li&gt;</span></div><div class="line"></div><div class="line">tags = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</div><div class="line"><span class="built_in">console</span>.log(tags[<span class="number">0</span>]); <span class="comment">// Output: &lt;li id="highlight"&gt;List Item 1&lt;/li&gt;</span></div><div class="line"></div><div class="line"><span class="comment">// Returns the first element that matches a given CSS-style selector.</span></div><div class="line">tag = <span class="built_in">document</span>.querySelector(<span class="string">"#highlight"</span>);</div><div class="line">tag = <span class="built_in">document</span>.querySelector(<span class="string">".bolded"</span>);</div><div class="line">tag = <span class="built_in">document</span>.querySelector(<span class="string">"h1"</span>);</div><div class="line"></div><div class="line">tags = <span class="built_in">document</span>.querySelectorAll(<span class="string">"h1"</span>);</div><div class="line"><span class="built_in">console</span>.log(tags[<span class="number">0</span>]);  <span class="comment">// Output: &lt;h1&gt;Hello&lt;/h1&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Manipulating-style"><a href="#Manipulating-style" class="headerlink" title="Manipulating style"></a>Manipulating style</h3><p>Recommended for styles to be defined in a separate file or files.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.some-class</span> &#123;</div><div class="line">	<span class="attribute">color</span>: blue;</div><div class="line">	<span class="attribute">border</span>: <span class="number">10px</span> solid red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// This is bad.</span></div><div class="line"><span class="keyword">var</span> tag = <span class="built_in">document</span>.getElementById(<span class="string">"highlight"</span>);</div><div class="line">tag.style.color = <span class="string">"blue"</span>;</div><div class="line">tag.style.border = <span class="string">"10px solid red"</span>;</div><div class="line"></div><div class="line"><span class="comment">//This is better.</span></div><div class="line"><span class="keyword">var</span> tag = <span class="built_in">document</span>.getElementById(<span class="string">"highlight"</span>);</div><div class="line">tag.classList.add(<span class="string">"some-class"</span>);</div></pre></td></tr></table></figure>
<h3 id="Manipulating-text-and-content"><a href="#Manipulating-text-and-content" class="headerlink" title="Manipulating text and content"></a>Manipulating text and content</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">	This is an <span class="tag">&lt;<span class="name">string</span>&gt;</span>awesome<span class="tag">&lt;/<span class="name">string</span>&gt;</span> paragraph</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tag = <span class="built_in">document</span>.querySelector(<span class="string">"p"</span>);</div><div class="line"><span class="built_in">console</span>.log(tag.textContent)  </div><div class="line"><span class="comment">// Output: This is an awesome paragraph</span></div><div class="line"><span class="built_in">console</span>.log(tag.innerHTML)	</div><div class="line"><span class="comment">// Output: This is an &lt;stong&gt;awesome&lt;/string&gt; paragraph</span></div></pre></td></tr></table></figure>
<h3 id="Manipulating-attributes"><a href="#Manipulating-attributes" class="headerlink" title="Manipulating attributes"></a>Manipulating attributes</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"www.google.com"</span>&gt;</span>I am a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"logo.png"</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> link = <span class="built_in">document</span>.querySelector(<span class="string">"a"</span>);</div><div class="line"><span class="built_in">console</span>.log(link.getAttribute(<span class="string">"href"</span>)); <span class="comment">// Output: www.google.com</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.querySelecotr(<span class="string">"img"</span>);</div><div class="line">img.setAttribute(<span class="string">"src"</span>, <span class="string">"corgi.png"</span>);</div></pre></td></tr></table></figure>
<h3 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> button = <span class="built_in">document</span>.querySelector(<span class="string">"button"</span>);</div><div class="line">button.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"Clicked the button!"</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">"li"</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; lis.length; i++) &#123;</div><div class="line">	lis[i].addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">this</span>.style.color = <span class="string">"pink"</span>;</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://stackoverflow.com/questions/17047497/what-is-the-difference-between-change-and-input-event-for-an-input-element/17047607#17047607" target="_blank" rel="external">What is the difference between “change” and “input” event for an INPUT element (StackOverflow)</a></li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol>
<li><code>&lt;script type=&quot;text/javascript&quot; src=&quot;script.js&quot; async&gt;&lt;/script&gt;</code><ul>
<li><code>&lt;head&gt;</code>안에서 <code>&lt;script type=&quot;text/javascript&quot; src=&quot;script.js&quot;&gt;&lt;/script&gt;</code>로 스크립트 파일을 불러오면 다 불러오기 전까지 다음 코드로 진행하지 않거나 HTML 엘리먼트를 선택하는 스크립트가 있다면 오류가 발생한다. 이를 보완하기 위해 <code>async</code>, <code>defer</code> 속성을 지원하게 되었으며 IE10 미만에서는 지원하지 않기 때문에 <body> 태그의 마지막 부분에서 스크립트 파일들을 호출하기도 한다.</body></li>
<li><a href="https://stackoverflow.com/questions/436411/where-should-i-put-script-tags-in-html-markup" target="_blank" rel="external">Where should I put script tags in HTML markup?  (StackOverflow)</a></li>
<li><a href="https://developers.google.com/speed/docs/insights/BlockingJS" target="_blank" rel="external">Remove Render-Blocking JavaScript (Google Developers)</a></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Javascript-Basics&quot;&gt;&lt;a href=&quot;#Javascript-Basics&quot; class=&quot;headerlink&quot; title=&quot;Javascript Basics&quot;&gt;&lt;/a&gt;Javascript Basics&lt;/h1&gt;&lt;h2 id=&quot;Primi
    
    </summary>
    
      <category term="Javascript" scheme="http://blog.jhko.me/categories/Javascript/"/>
    
    
      <category term="javascript" scheme="http://blog.jhko.me/tags/javascript/"/>
    
      <category term="basic" scheme="http://blog.jhko.me/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>마크다운 참고자료</title>
    <link href="http://blog.jhko.me/2017/07/12/markdown-cheatsheet/"/>
    <id>http://blog.jhko.me/2017/07/12/markdown-cheatsheet/</id>
    <published>2017-07-12T14:43:18.000Z</published>
    <updated>2017-07-20T06:59:18.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>앞으로 블로그 글 작성을 위해 <a href="https://guides.github.com/features/mastering-markdown" target="_blank" rel="external">GitHub Markdown</a>을 참고하여 정리했습니다.</p>
</blockquote>
<h1 id="Markdown-Cheatsheet"><a href="#Markdown-Cheatsheet" class="headerlink" title="Markdown Cheatsheet"></a>Markdown Cheatsheet</h1><h2 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># H1</div><div class="line">## H2</div><div class="line">### H3</div><div class="line">#### H4</div><div class="line">##### H5</div><div class="line">###### H6</div></pre></td></tr></table></figure>
<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><p>…</p>
<h2 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*italics*, _italics_</div><div class="line">**bold**, __bold__</div><div class="line">**bold and __italics__**</div><div class="line">~~strike~~</div></pre></td></tr></table></figure>
<p><em>italics</em>, <em>italics</em><br><strong>bold</strong>, <strong>bold</strong><br><strong>bold and <strong>italics</strong></strong><br><del>strike</del></p>
<h2 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. One</div><div class="line">2. Two</div><div class="line">  1. One</div><div class="line">3. Three</div><div class="line">  * content</div><div class="line"></div><div class="line">- title</div><div class="line">  - content</div></pre></td></tr></table></figure>
<ol>
<li>One</li>
<li>Two<ol>
<li>One</li>
</ol>
</li>
<li>Three<ul>
<li>content</li>
</ul>
</li>
</ol>
<ul>
<li>title<ul>
<li>content</li>
</ul>
</li>
</ul>
<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![Unsplash Source](Unsplash Source.jpg)</div></pre></td></tr></table></figure>
<p><img src="Unsplash Source.jpg" alt="Unsplash Source"></p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[GitHub Markdown](https://guides.github.com/features/mastering-markdown)</div></pre></td></tr></table></figure>
<p><a href="https://guides.github.com/features/mastering-markdown" target="_blank" rel="external">GitHub Markdown</a></p>
<h2 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; A block quotation (also known as a long quotation or extract) is a quotation in a written document that is set off from the main text as a paragraph, or block of text, and typically distinguished visually using indentation and a different typeface or smaller size font. - In [Wikipedia](https://en.wikipedia.org/wiki/Block_quotation)</div></pre></td></tr></table></figure>
<blockquote>
<p>A block quotation (also known as a long quotation or extract) is a quotation in a written document that is set off from the main text as a paragraph, or block of text, and typically distinguished visually using indentation and a different typeface or smaller size font. - In <a href="https://en.wikipedia.org/wiki/Block_quotation" target="_blank" rel="external">Wikipedia</a></p>
</blockquote>
<h2 id="Inline-code"><a href="#Inline-code" class="headerlink" title="Inline code"></a>Inline code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello, `This is inline code.`</div></pre></td></tr></table></figure>
<p>Hello, <code>This is inline code.</code></p>
<h2 id="Horizontal-Rule"><a href="#Horizontal-Rule" class="headerlink" title="Horizontal Rule"></a>Horizontal Rule</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">---</div></pre></td></tr></table></figure>
<hr>
<h2 id="Syntax-highlighting"><a href="#Syntax-highlighting" class="headerlink" title="Syntax highlighting"></a>Syntax highlighting</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">```java</div><div class="line">public void printHelloWorld() &#123;</div><div class="line">  System.out.println(&quot;Hello, World!&quot;);</div><div class="line">&#125;</div><div class="line">```</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printHelloWorld</span><span class="params">()</span> </span>&#123;</div><div class="line">  System.out.println(<span class="string">"Hello, World!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">항목1 | 가운데 정렬 | 오른쪽 정렬</div><div class="line">---- | :----: | ----:</div><div class="line">첫번째 | 두번째 | 참고</div><div class="line">세번째 | 네번째 | 비고</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>항목1</th>
<th style="text-align:center">가운데 정렬</th>
<th style="text-align:right">오른쪽 정렬</th>
</tr>
</thead>
<tbody>
<tr>
<td>첫번째</td>
<td style="text-align:center">두번째</td>
<td style="text-align:right">참고</td>
</tr>
<tr>
<td>세번째</td>
<td style="text-align:center">네번째</td>
<td style="text-align:right">비고</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;앞으로 블로그 글 작성을 위해 &lt;a href=&quot;https://guides.github.com/features/mastering-markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Markd
    
    </summary>
    
      <category term="Etc" scheme="http://blog.jhko.me/categories/Etc/"/>
    
    
      <category term="markdown" scheme="http://blog.jhko.me/tags/markdown/"/>
    
      <category term="cheatsheet" scheme="http://blog.jhko.me/tags/cheatsheet/"/>
    
      <category term="blog" scheme="http://blog.jhko.me/tags/blog/"/>
    
  </entry>
  
</feed>
